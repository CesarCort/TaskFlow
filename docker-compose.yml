version: '3.8'

services:
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=taskflow
      - POSTGRES_USER=taskflow
      - POSTGRES_PASSWORD=taskflow
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  web:
    build:
      context: .
      dockerfile: docker/django/Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.local
      - DATABASE_URL=postgres://taskflow:taskflow@db:5432/taskflow
      - REDIS_URL=redis://redis:6379/0
      - DATABASE=postgres
      - SQL_HOST=db
      - SQL_PORT=5432
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    depends_on:
      - db
      - redis
    stdin_open: true
    tty: true

  celery:
    build:
      context: .
      dockerfile: docker/celery/Dockerfile
    command: watchmedo auto-restart --directory=/app --pattern=*.py --recursive -- celery -A config worker -l INFO
    volumes:
      - ./backend:/app
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.local
      - DATABASE_URL=postgres://taskflow:taskflow@db:5432/taskflow
      - REDIS_URL=redis://redis:6379/0
      - DATABASE=postgres
      - SQL_HOST=db
      - SQL_PORT=5432
      - PYTHONUNBUFFERED=1
    depends_on:
      - web
      - redis

  celery-beat:
    build:
      context: .
      dockerfile: docker/celery/Dockerfile
    command: watchmedo auto-restart --directory=/app --pattern=*.py --recursive -- celery -A config beat -l INFO
    volumes:
      - ./backend:/app
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.local
      - DATABASE_URL=postgres://taskflow:taskflow@db:5432/taskflow
      - REDIS_URL=redis://redis:6379/0
      - DATABASE=postgres
      - SQL_HOST=db
      - SQL_PORT=5432
      - PYTHONUNBUFFERED=1
    depends_on:
      - web
      - redis

  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    command: npm run dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://web:8000
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - web

  nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    ports:
      - "80:80"
    depends_on:
      - web
      - frontend
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume: 